#include "drivers/mss_gpio/mss_gpio.h"
#include "drivers/mss_timer/mss_timer.h"
#include "drivers/mss_uart/mss_uart.h"

#include <stdio.h>
#include <inttypes.h>

#include "imu.h"




#define WHOAMI 0x75


int main()
{
	//uint32_t count;

	MSS_GPIO_init();
	MSS_GPIO_config( MSS_GPIO_0, MSS_GPIO_OUTPUT_MODE);
	MSS_TIM1_init(MSS_TIMER_ONE_SHOT_MODE);
	MSS_I2C_init(&g_mss_i2c1 , IMU_ADDRESS_WRITE, MSS_I2C_PCLK_DIV_256 );

	imu_init();

	while( 1 ) {

		uint16_t x_val = imu_accel_x();
		uint16_t y_val = imu_accel_y();
		uint16_t z_val = imu_accel_z();

		//printf("Accel X: %u\n\r", x_val);
		printf("Accel Y: %u\n\r", y_val);
		//printf("Accel Z: %u\n\r", z_val);





//		//150000 = 1.5ms pulse
//		//1.49ms pulse = equilibrium point
//		uint32_t pulsewidth = 200000;
//		uint32_t period = 2000000;
//		MSS_TIM1_load_immediate(period);
//	    MSS_TIM1_start();
//
//	    while (MSS_TIM1_get_current_value() > 0) {
//
//	    	if (MSS_TIM1_get_current_value() > (period - pulsewidth))
//	    		MSS_GPIO_set_output( MSS_GPIO_0, 1);
//	    	else
//	    		MSS_GPIO_set_output( MSS_GPIO_0, 0);
//	    }
	}

	return 0;
}
